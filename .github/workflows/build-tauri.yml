name: Build & Release (Tauri)

on:
  # Manual trigger or when pushing a new version tag like v0.1.3
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      # Install Bun (needed for sidecar build & frontend tooling)
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 'latest'

      # Install JS/TS dependencies (frozen to lock-file)
      - name: Install dependencies
        run: bun install --frozen-lockfile

      # Build the sidecar binary; this produces platform-specific executables
      - name: Build sidecar binary
        run: |
          bun run sidecar:bundle
          # Build only the native binary for the current runner's platform.
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            bunx @yao-pkg/pkg sidecar.dist.js --targets node20-win-x64 --assets "node_modules/better-sqlite3/build/Release/better_sqlite3.node" --output src-tauri/bin/gg-sidecar-win-x64.exe
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            bunx @yao-pkg/pkg sidecar.dist.js --targets node20-macos-arm64,node20-macos-x64 --assets "node_modules/better-sqlite3/build/Release/better_sqlite3.node" --output src-tauri/bin/gg-sidecar
          else
            bunx @yao-pkg/pkg sidecar.dist.js --targets node20-linux-x64 --assets "node_modules/better-sqlite3/build/Release/better_sqlite3.node" --output src-tauri/bin/gg-sidecar-linux-x64
          fi
          if [[ "${{ runner.os }}" == "macOS" ]]; then
            bun run sidecar:post
          fi
        shell: bash

      # Use the official Tauri build action which sets up Rust and platform deps automatically
      - name: Build Tauri bundle
        uses: tauri-apps/tauri-action@v0
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          releaseDraft: true # Make a draft GitHub Release on tag builds
          includeDebug: false

      # Always upload bundles as workflow artifacts so they are downloadable even on branch builds
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: better-gallery-${{ runner.os }}
          path: |
            src-tauri/target/release/bundle/**/better-gallery*.*
          if-no-files-found: error
